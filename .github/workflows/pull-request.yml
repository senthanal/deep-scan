name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/**'

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: npm ci

      - name: Check for changeset
        id: changeset
        run: |
          if [ -z "$(ls .changeset/*.md 2>/dev/null)" ]; then
            echo "::error::No changeset found. Please run 'npx changeset' to document your changes."
            exit 1
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint --if-present

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build-and-upload:
    name: Build and Upload Artifacts
    runs-on: ubuntu-latest
    needs: [validate, lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      # Get changed packages
      - name: Get changed packages
        id: changed-packages
        run: |
          PACKAGES=""
          for pkg in src/*/; do
            if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -q "^${pkg}"; then
              PKG_NAME=$(node -e "console.log(require('./${pkg}package.json').name.replace('@', '').replace('/', '-'))")
              PACKAGES="$PACKAGES $PKG_NAME"
            fi
          done
          echo "packages=${PACKAGES}" >> $GITHUB_OUTPUT

      # Create package info file
      - name: Create package info
        run: |
          echo "PR: #${{ github.event.pull_request.number }}" > dist/build-info.txt
          echo "Commit: ${{ github.sha }}" >> dist/build-info.txt
          echo "Built: $(date)" >> dist/build-info.txt

      # Upload artifacts for each changed package
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: |
            dist/
            !dist/**/node_modules/
            !dist/**/.changeset/
          if-no-files-found: error
          retention-days: 7

      # Add comment to PR with artifact info
      - name: Comment on PR
        if: success() && steps.changed-packages.outputs.packages != 'none'
        uses: actions/github-script@v7
        with:
          script: |
            const packages = '${{ steps.changed-packages.outputs.packages }}'.trim();
            const artifactName = 'dist-packages';

            const message = `### ðŸ“¦ Build Artifacts Available

            The following packages have been built and uploaded:
            ${packages.split(' ').map(pkg => `- \`${pkg}\``).join('\n')}

            You can download the artifacts from the "Artifacts" section of this workflow run.

            > Note: Artifacts are retained for 7 days.`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });


permissions:
  contents: read
  pull-requests: write
